---
version: "2"
services:
# Server
  server:
    build:
      context: ./
      dockerfile: Server-a.dockerfile
    image: "server"
    restart: always
    networks:
      BACKEND:
        ipv4_address: "192.168.14.11"
    cap_add:  
      - NET_ADMIN
    volumes:
      - /data/traces:/mnt  
    hostname: BACKEND

# Client
  client:
    build:
      context: ./
      dockerfile: Client.dockerfile
    image: "client"
    restart: always
    networks:
      CLIENT:
        ipv4_address: "192.168.13.5"
    cap_add:  
      - NET_ADMIN
    volumes:
      - /data/traces:/mnt  
    hostname: Client
    command: tail -f /dev/null

# Router-1
  edge-router:
    build:
      context: ./
      dockerfile: Router.dockerfile
    image: "edge-router"
    restart: always
    networks:
      A_INTERNET:
        ipv4_address: "192.168.16.10"
      CLIENT:
        ipv4_address: "192.168.13.10"
      INFRA:
        ipv4_address: "192.168.15.10"
    cap_add:  
      - NET_ADMIN
    ports:
      - 9000:10000
    volumes:
      - /data/traces:/mnt  
    hostname: Edge-Router
# Router-2
  router-2:
    build:
      context: ./
      dockerfile: Router.dockerfile
    image: "router"
    restart: always
    networks:
      INFRA:
        ipv4_address: "192.168.15.100"
      BACKEND:
        ipv4_address: "192.168.14.10"
    cap_add:  
      - NET_ADMIN
    ports:
      - 9001:10000
    volumes:
      - /data/traces:/mnt
    hostname: Router

networks:
# defined BACKEND network for docker containers
  BACKEND:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.14.0/24"
  CLIENT:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.13.0/24"
  INFRA:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.15.0/24"
  A_INTERNET:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.16.0/24"